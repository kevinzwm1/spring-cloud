spring:
  cloud:
    config:
      server:
        native:
          search-locations: classpath:/shared
  profiles:
     active: native

server:
  port: 8888

security:
  user:
    password: 123

encrypt:
  key: foo
#  keyStore:
#    location: classpath:/server.jks
#
#    password: letmein
#    alias: mytestkey
#    secret: changeme

#    location: file://${user.home}/server.jks



#Security
#You are free to secure your Config Server in any way that makes sense to you (from physical network security to OAuth2 bearer tokens),
#and Spring Security and Spring Boot make it easy to do pretty much anything.
#
#To use the default Spring Boot configured HTTP Basic security, just include Spring Security on the classpath
#(e.g. through spring-boot-starter-security). The default is a username of "user" and a randomly generated password,
#which isnâ€™t going to be very useful in practice, so we recommend you configure the password (via security.user.password) and encrypt it
